version: '3'

dotenv: ['.env']

tasks:
  default:
    cmds:
      - echo "This is task cmd"
    silent: true
  
  build:
    cmds:
      - CGO_ENABLED=0 GOOS=linux go build -o bin/apiserver cmd/apiserver/main.go
    silent: true
  build_awstest:
    cmds:
      - CGO_ENABLED=0 GOOS=linux go build -o bin/awstest cmd/awstest/main.go
    silent: true
  run:
    cmds:
      - ./bin/apiserver
    deps:
      - build
    silent: true
  run_awstest:
    cmds:
      - ./bin/awstest
    deps:
      - build_awstest
    silent: true

  build-mage:
    cmds:
      - CGO_ENABLED=0 GOOS=linux go build -o ./mage mage-tools/mage.go
    silent: true
  
  build-gg:
    cmds:
      - ./mage -d mage-tools -compile ../gg
    deps:
      - build-mage
    silent: true

  coverage:
    cmds:
      - go test -v -cover ./...
    silent: true
  test:
    cmds:
      - go test -v ./...
    silent: true
  
  db_login:
    cmds:
      - psql $DB_URL
    silent: true
  
  db_create_migration:
    cmds:
      - migrate create -ext sql -dir migrations -seq {{.table_name}}
    silent: true
    requires:
      vars: [table_name]

  db_migrate:
    cmds:
      - migrate -database $DB_URL -path migrations {{.action}}
    silent: true
    requires:
      vars: [action]
    ## action should be up or down
  
  test_db_migrate:
    cmds:
      - migrate -database $DB_URL_TEST -path migrations {{.action}}
    silent: true
    requires:
      vars: [action]
 
  test_db_login:
    cmds:
      - psql $DB_URL_TEST
    silent: true
  
  terraform_plan:
    cmds:
      - cd terraform;terraform plan
    silent: true
  
  terraform_apply:
    cmds:
      - cd terraform;terraform apply -auto-approve
    silent: true
  
  terraform_destroy:
    cmds:
      - cd terraform;terraform destroy -auto-approve
    silent: true

  check_list_queue:
    cmds:
      - aws --endpoint-url http://localhost:4566 sqs list-queues
    silent: true

  check_s3_bucket:
    cmds:
      - aws --endpoint-url http://localhost:4566 s3 ls
    silent: true